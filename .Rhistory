#read in the COVID-19 data from the URL
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
head(covid, 5)
?tidyverse
covid<- covid %>%
mutate(date = as.Date(date)) %>%  # Ensure date is in proper Date format
filter(date == max(date))
View(covid)
top_6_states <- covid |>
arrange(desc(cases)) |> #arrange from most to least cases
slice_head(n = 6) |> #show top 6
pull(state)
covid_filtered <- covid |>
filter(state %in% top_6_states)
View(covid_filtered)
ggplot(covid_filtered, aes(x = date, y = cases, color = state, group = state)) +
geom_line() +  # Create a line plot
labs(title = "COVID-19 Cases in the Top 6 States",
x = "Date",
y = "Number of Cases") +
facet_wrap(~ state, scales = "free_y") +  # Facet by state
theme_minimal()
ggplot(covid_filtered, aes(x = date, y = cases, color = state, group = state)) +
geom_line() +  # Create a line plot
labs(title = "COVID-19 Cases in the Top 6 States",
x = "Date",
y = "Number of Cases") +
facet_grid(~ state, scales = "free_y") +  # Facet by state
theme_minimal()
View(covid)
ggsave("img/covid_cases_top_6_states.png", width = 10, height = 6)
ggsave("imgs/covid_cases_top_6_states.png", width = 10, units = 6)
ggsave("imgs/covid_cases_top_6_states.png", width = 10, height = 6)
ggplot(covid_filtered, aes(x = date, y = cases, color = state, group = state)) +
geom_line() +  # Create a line plot
labs(title = "COVID-19 Cases in the Top 6 States",
x = "Date",
y = "Number of Cases") +
facet_grid(~ state, scales = "free_y") +  # Facet by state
theme_minimal()  # Use a clean theme
top_6_states<-covid %>%
filter(date == max(date)) %>%
group_by(state) %>%
summarize(total_cases = sum(cases, na.rm = TRUE)) %>%
arrange(desc(total_cases)) %>%
slice(1:6) |>
pull(state)
print(top_6_states)
top_6_states<-covid %>%
filter(date == max(date)) %>%
group_by(state) %>%
summarize(total_cases = sum(cases, na.rm = TRUE)) %>%
arrange(desc(total_cases)) %>%
slice(1:6)
View(top_6_states)
covid_filtered <- covid |>
filter(state %in% top_6_states)
View(covid_filtered)
covid<- covid %>%
mutate(date = as.Date(date)) %>%  # Ensure date is in proper Date format
filter(date == max(date))  # Filter for the most recent data with max
top_6_states <- covid |>
arrange(desc(cases)) |> #arrange from most to least cases
slice_head(n = 6) |> #show top 6
pull(state)
covid_filtered <- covid |>
filter(state %in% top_6_states)
ggplot2(top_6_states, aes(x = date, y = cases, color = state, group = state)) +
geom_line() +  # Create a line plot
labs(title = "COVID-19 Cases in the Top 6 States",
x = "Date",
y = "Number of Cases") +
facet_grid(~ state) +  # Facet by state
theme_minimal()
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
head(covid, 5)
top_6_state<- covid %>%
filter(date == max(date)) %>%
group_by(state) %>%
summarize(total_cases = sum(cases, na.rm = TRUE)) %>%
arrange(desc(total_cases)) %>%
slice(1:6)
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
top_6_state<- covid %>%
filter(date == max(date)) %>%
group_by(state) %>%
summarize(total_cases = sum(cases, na.rm = TRUE)) %>%
arrange(desc(total_cases)) %>%
slice(1:6)
View(top_6_state)
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
head(covid, 5)
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
head(covid, 5)
top_6_states <- covid %>%
filter(date==max(date)) %>%
arrange(desc(cases)) %>%
slice_head(n = 6) %>%
pull(state)
covid_data_filtered <- covid %>%
filter(state %in% top_6_states)
View(covid_data_filtered)
View(covid_data_filtered)
ggplot(covid_data_filtered, aes(x = date, y = cases, color = state, group = state)) +
geom_line() +  # Add a line plot layer
labs(title = "COVID-19 Cases in the Top 6 States",
x = "Date",
y = "Number of Cases") +
facet_wrap(~ state, scales = "free_y") +  # Facet by state, free y-axis scales
theme_minimal() +  # Clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate X-axis labels
ggplot(covid_data_filtered, aes(x = date, y = cases, color = state)) +
geom_smooth(method = "loess", se = FALSE) +  # Adds a smooth trend line (loess method)
labs(title = "Trend of COVID-19 Cases in the Top 6 States",
x = "Date",
y = "Number of Cases") +
facet_wrap(~ state, scales = "free_y") +  # Facet by state, with free y-scales
theme_minimal() +  # Clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
covid$date <- as.Date(covid_data$date)
covid$date <- as.Date(covid$date)  #change the date format to make easier
covid$date <- as.Date(covid$date)  #change the date format to make easier
daily_total_cases <- covid %>%
group_by(date) %>%  # Group by date, allows to group cases by day
summarize(total_cases = sum(cases, na.rm = TRUE))
View(daily_total_cases)
ggplot(daily_total_cases, aes(x = date, y = total_cases)) +
geom_col(fill = "red") +  # Create the column plot with skyblue bars
labs(title = "Daily Total COVID-19 Cases in the USA",
x = "Date",
y = "Total Cases") +
theme_minimal() +  # Clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for clarity
ggplot(daily_total_cases, aes(x = date, y = total_cases)) +
geom_col(fill = "red",alpha=.5) +
geom_smooth(method = "loess", se = FALSE, color = "red", size = 1) +# Create the column plot with skyblue bars
labs(title = "Daily Total COVID-19 Cases in the USA",
x = "Date",
y = "Total Cases") +
theme_minimal() +
ggplot(daily_total_cases, aes(x = date, y = total_cases)) +
geom_col(fill = "red",alpha=.5) +
geom_smooth(method = "loess", se = FALSE, color = "red", size = 1) +# Create the column plot with skyblue bars
labs(title = "Daily Total COVID-19 Cases in the USA",
x = "Date",
y = "Total Cases") +
theme_minimal() +  # Clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(covid)
min(covid$date)
max(covid$date)
max(covid$cases)
ggsave("imgs/daily_total_cases_with_trend.png", width = 10, height = 6)
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
top_6_states <- covid %>% #taking covid data and filtering for the max date
filter(date==max(date)) %>%
arrange(desc(cases)) %>% #arranging from most to least cases
slice_head(n = 6)
#read in the COVID-19 data from the URL
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
head(covid, 5)
##Make a faceted line plot (geom_line) of the 6** states with most cases. Your X axis should be the date and the y axis cases.**
#step 1. Identify the six states with the most current cases (yesterdays assignment + dplyr::pull)
#step 2. Filter the raw data to those 6 states (hint: %in%)
#step 3. Set up a ggplot –> add layers –> add labels –> add a facet –> add a theme
#step4. save the image to you img directory (hint: ggsave())
top_6_states <- covid %>% #taking covid data and filtering for the max date
filter(date==max(date)) %>%
arrange(desc(cases)) %>% #arranging from most to least cases
slice_head(n = 6) %>% #showing the top 6 rows
pull(state) #pulling the state names from those rows
covid_data_filtered <- covid %>%   #taking data from the states that= the anmes of the 6 states
filter(state %in% top_6_states)
ggplot(covid_data_filtered, aes(x = date, y = cases, color = state)) +
geom_smooth(method = "loess", se = FALSE) +  # Adds a smooth trend line (loess method)
labs(title = "Trend of COVID-19 Cases in the Top 6 States",
x = "Date",
y = "Number of Cases") +
facet_wrap(~ state, scales = "free_y") +  # Facet by state, with free y-scales
theme_minimal() +  # Clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis
##Make a column plot (geom_col) of daily total cases in the USA. Your X axis should be the date and the y axis cases.
#We can break this task into 3 steps:
#1.Identify the total cases each day in the whole country (hint: group_by(date))
#2. Set up a ggplot –> add layers –> add labels –> add a theme
#3. Save the image to your img directory (hint: ggsave())
covid$date <- as.Date(covid$date)  #change the date format to make easier
# Group by date and calculate the total cases for each day
daily_total_cases <- covid %>%
group_by(date) %>%  # Group by date, allows to group cases by day
summarize(total_cases = sum(cases, na.rm = TRUE)) #This sums up the cases column for each date
View(covid_data_filtered)
View(daily_total_cases)
ggplot(daily_total_cases, aes(x = date, y = total_cases)) +
geom_col(fill = "red",alpha=.5) +
geom_smooth(method = "loess", se = FALSE, color = "red", size = 1) +# Create the column plot with skyblue bars
labs(title = "Daily Total COVID-19 Cases in the USA",
x = "Date",
y = "Total Cases") +
theme_minimal() +  # Clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave("imgs/daily_total_cases_with_trend.png", width = 10, height = 6)
#read in the COVID-19 data from the URL
library(tidyverse)
url = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties-recent.csv'
covid = read_csv(url)
head(covid, 5)
##Make a faceted line plot (geom_line) of the 6** states with most cases. Your X axis should be the date and the y axis cases.**
#step 1. Identify the six states with the most current cases (yesterdays assignment + dplyr::pull)
#step 2. Filter the raw data to those 6 states (hint: %in%)
#step 3. Set up a ggplot –> add layers –> add labels –> add a facet –> add a theme
#step4. save the image to you img directory (hint: ggsave())
top_6_states <- covid %>% #taking covid data and filtering for the max date
filter(date==max(date)) %>%
arrange(desc(cases)) %>% #arranging from most to least cases
slice_head(n = 6) %>% #showing the top 6 rows
pull(state) #pulling the state names from those rows
covid_data_filtered <- covid %>%   #taking data from the states that= the anmes of the 6 states
filter(state %in% top_6_states)
ggplot(covid_data_filtered, aes(x = date, y = cases, color = state)) +
geom_smooth(method = "loess", se = FALSE) +  # Adds a smooth trend line (loess method)
labs(title = "Trend of COVID-19 Cases in the Top 6 States",
x = "Date",
y = "Number of Cases") +
facet_wrap(~ state, scales = "free_y") +  # Facet by state, with free y-scales
theme_minimal() +  # Clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis
##Make a column plot (geom_col) of daily total cases in the USA. Your X axis should be the date and the y axis cases.
#We can break this task into 3 steps:
#1.Identify the total cases each day in the whole country (hint: group_by(date))
#2. Set up a ggplot –> add layers –> add labels –> add a theme
#3. Save the image to your img directory (hint: ggsave())
covid$date <- as.Date(covid$date)  #change the date format to make easier
# Group by date and calculate the total cases for each day
daily_total_cases <- covid %>%
group_by(date) %>%  # Group by date, allows to group cases by day
summarize(total_cases = sum(cases, na.rm = TRUE)) #This sums up the cases column for each date
ggplot(daily_total_cases, aes(x = date, y = total_cases)) +
geom_col(fill = "red",alpha=.5) +
geom_smooth(method = "loess", se = FALSE, color = "red", size = 1) +# Create the column plot with skyblue bars
labs(title = "Daily Total COVID-19 Cases in the USA",
x = "Date",
y = "Total Cases") +
theme_minimal() +  # Clean theme
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for clarity
ggsave("imgs/daily_total_cases_with_trend.png", width = 10, height = 6)
