---
title: "day-21-timeseries"
author: "Megan Hoover"

format:
  html:
    self-contained: true
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
library(dataRetrieval)
library(tidyverse)
library(tsibble) #need for the yearmonth class
library(plotly)
library(feasts) #for subseries
```

```{r}

# Example: Cache la Poudre River at Mouth (USGS site 06752260)
poudre_flow <- readNWISdv(siteNumber = "06752260",    # Download data from USGS for site 06752260
                          parameterCd = "00060",      # Parameter code 00060 = discharge in cfs)
                          startDate = "2013-01-01",   # Set the start date
                          endDate = "2023-12-31") |>  # Set the end date
  renameNWISColumns() |>                              # Rename columns to standard names (e.g., "Flow", "Date")
  mutate(Date = yearmonth(Date)) |>                   # Convert daily Date values into a year-month format (e.g., "2023 Jan")
  group_by(Date) |>                                   # Group the data by the new monthly Date
  summarise(Flow = mean(Flow))                       # Calculate the average daily flow for each month
```

# 1. Convert to tsibble

Use as_tsibble() to convert the data.frame into a tsibble object. This will allow you to use the feast functions for time series analysis.
```{r}
poudre_tsibble <- poudre_flow |> 
  as_tsibble(index = Date)
```


# 2. Plotting the time series

Use ggplot to plot the time series data. Animate this plot with plotly
```{r}
p <- ggplot(poudre_tsibble, aes(x = Date, y = Flow)) +
  geom_line(color = "darkblue", linewidth = 1.2) +
  labs(title = "Interactive Monthly Streamflow - Cache la Poudre River",
       x = "Date", y = "Flow (cfs)") +
  theme_minimal()

ggplotly(p)

```


# 3. Subseries

Use gg_subseries to visualize the seasonal patterns in the data. This will help you identify any trends or seasonal cycles in the streamflow data. Describe what you see in the plot. How are “seasons” defined in this plot? What do you think the “subseries” represent?
```{r}
# Subseries plot
poudre_tsibble |> 
  gg_subseries(Flow) +
  labs(title = "Seasonal Subseries Plot of Streamflow",
       y = "Flow (cfs)") +
  theme_minimal()

```

The sub_series shows that the monthly flows tend to be highest in May and June.Seasons are typically defined by months, and the months that represent the most flow are spring months. I think this represents the precipitation and snowmelt events thats happen in the spring, causing a higher flow. 


# 4. Decompose

Use the model(STL(...)) pattern to decompose the time series data into its components: trend, seasonality, and residuals. Chose a window that you feel is most appropriate to this data. Describe what you see in the plot. How do the components change over time? What do you think the trend and seasonal components represent?
```{r}
# Decompose the time series with STL, using a window appropriate for yearly data (12 periods)
poudre_decomposed <- poudre_tsibble |> 
  model(stl = STL(Flow ~ season(window = 12) + trend(window = 24)))

# Visualize the decomposition
components(poudre_decomposed) |> 
  autoplot() +
  labs(title = "Decomposition of Cache la Poudre River Streamflow", 
       subtitle = "Trend, Seasonality, and Residuals")

```
This plot shows the flow, trend, seasons, and residuals from 2014 to 2014. The trend shows the long-term stream flow patterns, over time it follows the same pattern, but gets smaller over time. The season cycle shows to repeat every 12 months, with some variation in peaks that could be do to climate variables of that year. The residuals capture short term fluctuations that aren't explain by seasons and trend. There are some times of the year where the residual is large, meaning that the trend and seasonality of the model isn't capturing all aspects of the data.
